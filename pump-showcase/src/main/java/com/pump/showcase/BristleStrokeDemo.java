/**
 * This software is released as part of the Pumpernickel project.
 * 
 * All com.pump resources in the Pumpernickel project are distributed under the
 * MIT License:
 * https://raw.githubusercontent.com/mickleness/pumpernickel/master/License.txt
 * 
 * More information about the Pumpernickel project is available here:
 * https://mickleness.github.io/pumpernickel/
 */
package com.pump.showcase;

import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

import com.pump.awt.BristleStroke;
import com.pump.blog.Blurb;
import com.pump.blog.ResourceSample;

/** A simple demo program showing off the {@link com.pump.awt.BristleStroke}. 
 *
 *
 * 
 * <!-- ======== START OF AUTOGENERATED SAMPLES ======== -->
 * <p><img src="https://raw.githubusercontent.com/mickleness/pumpernickel/master/pump-release/resources/samples/BristleStrokeDemo/sample.png" alt="new&#160;com.bric.awt.BristleStrokeDemo()">
 * <!-- ======== END OF AUTOGENERATED SAMPLES ======== -->
 */
@Blurb (
filename = "BristleStroke",
title = "Strokes: a Bristle Stroke",
releaseDate = "May 2008",
summary = "A stroke based on splattering lots of tiny shapes along a path.",
instructions = "This applet showcases a stroke composed of thousands of tiny shapes, resembling a bristle.\n"+
"<p>Use the two spinners to control the width and thickness of the stroke. There is blue text on the preview "+
"that displays the time it took to render everything.",
link = "http://javagraphics.blogspot.com/2008/05/strokes-bristle-stroke.html",
sandboxDemo = true
)
@ResourceSample( sample="new com.bric.awt.BristleStrokeDemo()" )
public class BristleStrokeDemo extends StrokeDemo {
	private static final long serialVersionUID = 1L;
	
	public BristleStrokeDemo() throws NoSuchMethodException {
		super(BristleStroke.class, BristleStroke.class.getConstructor(new Class[] {
			Float.TYPE,
			Float.TYPE
		}),
		new JLabel[] {
			new JLabel("Starting Width:"),
			new JLabel("Thickness:")
		},
		new JSpinner[] {
			new JSpinner(new SpinnerNumberModel(1,.05,20,.1)),
			new JSpinner(new SpinnerNumberModel(.5,0,1,.05)),
		});
	}
}