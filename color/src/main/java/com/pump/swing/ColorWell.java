/*
 * @(#)ColorWell.java
 *
 * $Date: 2014-06-06 14:04:49 -0400 (Fri, 06 Jun 2014) $
 *
 * Copyright (c) 2011 by Jeremy Wood.
 * All rights reserved.
 *
 * The copyright of this software is owned by Jeremy Wood. 
 * You may not use, copy or modify this software, except in  
 * accordance with the license agreement you entered into with  
 * Jeremy Wood. For details see accompanying license terms.
 * 
 * This software is probably, but not necessarily, discussed here:
 * https://javagraphics.java.net/
 * 
 * That site should also contain the most recent official version
 * of this software.  (See the SVN repository for more details.)
 */
package com.pump.swing;

import java.awt.Color;

import javax.swing.UIManager;

import com.pump.blog.ResourceSample;
import com.pump.plaf.ColorWellUI;

/** This is a rectangular panel used to render one color.
 * <P>When the user interacts with this component (either by
 * the mouse or keyboard) he/she should usually be able to
 * choose another color.
 * 
 * 
 * <!-- ======== START OF AUTOGENERATED SAMPLES ======== -->
 * <p><img src="https://javagraphics.java.net/resources/samples/ColorWell/sample.png" alt="new&#160;com.pump.swing.ColorWell(&#160;java.awt.Color.blue&#160;)">
 * <!-- ======== END OF AUTOGENERATED SAMPLES ======== -->
 */
@ResourceSample( sample = {"new com.pump.swing.ColorWell( java.awt.Color.blue )"} )
public class ColorWell extends ColorComponent {
	private static final long serialVersionUID = 1L;
    private static final String uiClassID = "ColorWellUI";
  
    public static final String KEY_OPAQUE_COLORS = ColorWell.class.getName()+"#opaqueColor";

	public ColorWell(boolean isOpaque) {
        updateUI();
        setOpaqueColors(isOpaque);
        setRequestFocusEnabled(true);
        setFocusable(true);
	}
	
	public boolean isOpaqueColors() {
		Boolean b = (Boolean)getClientProperty(KEY_OPAQUE_COLORS);
		if(b==null)
			return false;
		return b.booleanValue();
	}
	
	public void setOpaqueColors(boolean isOpaque) {
		putClientProperty(KEY_OPAQUE_COLORS, isOpaque);
	}

	public ColorWell(boolean isOpaque,Color initialColor) {
		this(isOpaque);
		setColor(initialColor);
	}
	
    @Override
	public String getUIClassID() {
        return uiClassID;
    }
	
    @Override
	public void updateUI() {
    	if(UIManager.getDefaults().get(uiClassID)==null) {
    		UIManager.getDefaults().put(uiClassID, "com.pump.plaf.AquaColorWellUI");
    	}
    	setUI((ColorWellUI)UIManager.getUI(this));
    }
	
	public void setUI(ColorWellUI ui) {
        super.setUI(ui);
	}
	
	public ColorWellUI getUI() {
		return (ColorWellUI)ui;
	}
}

